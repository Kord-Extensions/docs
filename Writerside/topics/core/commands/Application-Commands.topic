<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="Application Commands" id="Application-Commands">

    <p>
        Application commands are a special type of command that makes use of Discord's interaction system.
        Depending on the type, these commands are displayed in the Discord client in one of these ways:
    </p>

    <list>
        <li>
            <a href="Slash-Commands.topic"/>: Above the chat input box when a user types a slash (<code>/</code>)
            character.
        </li>

        <li>
            <a href="Context-Commands.topic" anchor="message-commands"/>: In a menu named "Apps" displayed when a user
            right-clicks or taps-and-holds on a message.
        </li>

        <li>
            <a href="Context-Commands.topic" anchor="user-commands"/>: In a menu named "Apps" displayed when a user
            right-clicks or taps-and-holds on a username or avatar.
        </li>
    </list>

    <p>
        Before diving into working with these command types, it's important to understand
        <a href="Interactions.topic">what Discord interactions are and how they work</a>.
    </p>

    <chapter title="Application Command Objects" id="commands">
        <p>
            When you register an application command, the builder function will return an object that extends the
            <code>ApplicationCommand</code> type. This type extends the <code>Command</code> type, providing access
            to basic data and functionality specific to application commands.
        </p>

        <p>
            The intended public API is described below.
            However, it's possible to extend this type (and the other command types)
            if you want to implement your own customized command types.
        </p>

        <p>
            The <code>ApplicationCommand</code> type takes a generic type parameter based on the
            <code>InteractionCreateEvent</code> type, which is provided by the classes that extend
            <code>ApplicationCommand</code>.
            This generic type parameter will be referred to as <code>E</code> below.
        </p>

        <p>
            The following API definitions do not include the APIs provided by any extended supertypes.
            For more information on the command API, see <a href="Commands.topic" anchor="command-objects" />.
        </p>

        <chapter title="Builders" id="command-builders">
            <table style="header-row">
                <tr>
                    <td>Name</td>
                    <td>Receiver</td>
                    <td>Description</td>
                </tr>

                <tr>
                    <td><code>check</code></td>
                    <td><code>CheckWithCache &lt;E&gt;</code></td>

                    <td>
                        Register a check that must pass for the command's <code>action</code> to be run, which is
                        defined within the classes that extend <code>ApplicationCommand</code>.
                        For more information on checks, see <a href="Checks.topic">the dedicated documentation</a>.
                    </td>
                </tr>
            </table>
        </chapter>

        <chapter title="Functions" id="command-functions">
            <table style="header-row">
                <tr>
                    <td>Name</td>
                    <td>Arguments</td>
                    <td>Description</td>
                </tr>

                <tr>
                    <td><code>guild</code></td>
                    <td><code>Snowflake?</code></td>

                    <td>
                        Specify a specific guild to register this application command to.
                        Guild-specific commands are only available in a single guild, and will not work in DMs with
                        the bot.
                        Provide <code>null</code> to clear the registration guild.
                    </td>
                </tr>

                <tr>
                    <td><code>requirePermission</code></td>
                    <td><code>vararg Permission</code></td>

                    <td>
                        Specify one or more permissions that a user must have before they may execute this command by
                        default.
                        <format style="bold">Note:</format> This setting is simply a default value that may be
                        configured in the "Integrations" tab, within the guild's settings in the Discord client.
                        It is not enforced by the command framework â€” use a <a href="Checks.topic">check</a> for that.
                    </td>
                </tr>
            </table>
        </chapter>

        <chapter title="Properties" id="command-properties">
            <table style="both">
                <tr>
                    <td>Name</td>
                    <td>Type</td>
                    <td>Description</td>
                </tr>

                <tr id="command-properties-required:header:text:center">
                    <td colspan="4">
                        Required Properties
                    </td>
                </tr>

                <tr>
                    <td><code>name</code></td>
                    <td><code>Key</code></td>

                    <td>
                        <format style="bold">Required:</format>
						<a href="Internationalization.topic" anchor="using-translations-translating-keys">
							Key object
						</a> representing the command's name, which is used to invoke the command
                        and is displayed on Discord.
                        Your command's name must follow
                        <a href="https://discord.com/developers/docs/interactions/application-commands#application-command-object-application-command-naming">
                            Discord's naming requirements</a>.
                    </td>
                </tr>

                <tr id="command-properties-optional:header:text:center">
                    <td colspan="4">
                        Optional Properties
                    </td>
                </tr>

                <tr>
                    <td><code>allowByDefault</code></td>
                    <td><code>Boolean</code></td>

                    <td>
                        Whether to allow all members of a guild to execute this command by default.
                        When set, this property will overwrite any permissions provided by the
                        <code>requirePermission</code> function
                        Returns <code>true</code> if no required permissions have been set using
                        <code>requirePermission</code>.
                    </td>
                </tr>

                <tr>
                    <td><code>allowInDms</code></td>
                    <td><code>Boolean</code></td>

                    <td>
                        Whether to allow this command to be used in a DM with the bot.
                        Always returns <code>false</code> if a registration guild has been set via the
                        <code>guild</code> function, regardless of whether you modify this property's value yourself.
                    </td>
                </tr>
            </table>
        </chapter>
    </chapter>

    <chapter title="Application Command Context Objects" id="contexts">
        <p>
            When an application command is executed, the provided <code>action</code> block is run.
            This block is a receiver function against a subtype of the <code>ApplicationCommandContext</code> type,
            which itself is a subtype of the <code>CommandContext</code> type.
            This type provides an API that allows you to work with the command's execution data and respond to the
            user.
        </p>

        <p>
            Application command context objects always extend one of the
            <a href="Interactions.topic" anchor="interaction-contexts">interaction context types</a>,
            unless you're using a command from the <a href="Unsafe.topic">unsafe module</a>.
        </p>

        <p>
            The following API definitions do not include the APIs provided by any extended supertypes.
            For more information on the command API, see <a href="Commands.topic" anchor="context-objects" />.
        </p>

        <chapter title="Properties" id="context-properties">
            <table style="header-row">
                <tr>
                    <td>Name</td>
                    <td>Type</td>
                    <td>Description</td>
                </tr>

                <tr>
                    <td><code>appPermissions</code></td>
                    <td><code>Permissions?</code></td>

                    <td>
                        The permissions applicable to your bot in the current command execution context, as defined
                        by the bot's roles and current channel permissions.
                        Will be <code>null</code> if the command was executed in a DM with the bot.
                    </td>
                </tr>

                <tr>
                    <td><code>genericCommand</code></td>
                    <td><code>ApplicationCommand &lt;*&gt;</code></td>

                    <td>
                        Generic command object, representing the command this context belongs to.
                        A more specific reference will be provided in this type's subtypes.
                    </td>
                </tr>

                <tr>
                    <td><code>genericEvent</code></td>
                    <td><code>ApplicationCommandInteractionCreateEvent</code></td>

                    <td>
                        Generic event object, representing the Discord event that triggered the current command
                        execution.
                        A more specific reference will be provided in this type's subtypes.
                    </td>
                </tr>
            </table>
        </chapter>
    </chapter>
</topic>
