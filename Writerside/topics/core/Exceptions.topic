<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="Exceptions" id="Exceptions">

    <p>
        Kord Extensions provides a number of extra exception types.
        These are useful for understanding precisely what went wrong in specific situations, but there are some
        exceptions that provide extra functionality when writing your extensions.
    </p>

    <p>
        The global base type for extensions provided by Kord Extensions is <code>KordExException</code>.
        This type provides no extra functions or properties, and it directly extends <code>Exception</code>.
    </p>

    <chapter title="Functional Exceptions" id="functional">
        <p>
            The following exceptions don't necessarily represent programming errors.
            Instead, they exist to implement a framework feature, and you can use them freely for their intended
            purposes.
        </p>

        <chapter title="Discord Relayed" id="functional-discord-relayed">
            <p>
                This exception is used when your extension code needs to bail for some reason, whilst
                providing a message that should be relayed to the actioning user if there is one.
            </p>

            <p>
                The type for this exception is <code>DiscordRelayedException</code>.
            </p>

            <p>
                This exception supports the following extra properties:
            </p>

            <table style="header-row">
                <tr>
                    <td>Name</td>
                    <td>Type</td>
                    <td>Description</td>
                </tr>

                <tr>
                    <td><code>reason</code></td>
                    <td><code>String</code></td>

                    <td>
                        String to be relayed to the actioning user,
                    </td>
                </tr>

                <tr>
                    <td><code>translationKey</code></td>
                    <td><code>String?</code></td>

                    <td>
                        Translation key used to generate the <code>reason</code> string, if any.
                        Defaults to `null`.
                        For more information, see <a href="Internationalisation.topic">the dedicated documentation</a>.
                    </td>
                </tr>
            </table>
        </chapter>
    </chapter>

    <chapter title="General Exceptions" id="general">
        <chapter title="Argument Parsing" id="general-argument-parsing">
            <p>
                This exception is thrown when something goes wrong during command argument parsing.
            </p>

            <p>
                The type for this exception is <code>ArgumentParsingException</code>.
                Additionally, this exception extends <code>DiscordRelayedException</code>, rather than the base
                <code>KordExException</code> type.
            </p>

            <p>
                This exception supports the following extra properties:
            </p>

            <table style="header-row">
                <tr>
                    <td>Name</td>
                    <td>Type</td>
                    <td>Description</td>
                </tr>

                <tr>
                    <td><code>argument</code></td>
                    <td><code>Argument&lt;*&gt;?</code></td>

                    <td>
                        The <code>Argument</code> object representing the argument that failed to parse.
                    </td>
                </tr>

                <tr>
                    <td><code>arguments</code></td>
                    <td><code>Arguments</code></td>

                    <td>
                        The <code>Arguments</code> object containing the full set of arguments defined for this command.
                    </td>
                </tr>

                <tr>
                    <td><code>bundle</code></td>
                    <td><code>String?</code></td>

                    <td>
                        The translation bundle used to generate the given <code>reason</code> string, if any.
                        For more information, see <a href="Internationalisation.topic">the dedicated documentation</a>.
                    </td>
                </tr>

                <tr>
                    <td><code>locale</code></td>
                    <td><code>Locale</code></td>

                    <td>
                        The locale object used to translate the given <code>reason</code> string.
                        For more information, see <a href="Internationalisation.topic">the dedicated documentation</a>.
                    </td>
                </tr>

                <tr>
                    <td><code>parser</code></td>
                    <td><code>StringParser?</code></td>

                    <td>
                        The tokenizing string parser which was used to parse the given <code>argument</code>.
                        Will be <code>null</code> if this isn't a chat command.
                    </td>
                </tr>
            </table>
        </chapter>

        <chapter title="Command Registration" id="general-command-registration">
            <p>
                This exception is thrown when an attempt to register a <a href="Chat-Commands.topic">chat command</a>
                fails.
                This may happen when:
            </p>

            <list>
                <li>A command with the given name was registered previously.</li>
                <li>A command with the given alias was registered previously.</li>

                <li>
                    The command was previously registered under another name.
                    An alias should be used instead of trying to do this.
                </li>
            </list>

            <p>
                The type for this exception is <code>CommandRegistrationException</code>.
            </p>

            <p>
                This exception supports the following extra properties:
            </p>

            <table style="header-row">
                <tr>
                    <td>Name</td>
                    <td>Type</td>
                    <td>Description</td>
                </tr>

                <tr>
                    <td><code>name</code></td>
                    <td><code>String</code></td>

                    <td>
                        The name of the command that failed to be registered.
                    </td>
                </tr>

                <tr>
                    <td><code>reason</code></td>
                    <td><code>String</code></td>

                    <td>
                        The human-readable string explaining why the command couldn't be registered.
                    </td>
                </tr>
            </table>

            <p>
                There is no equivalent exception thrown for other command types.
            </p>
        </chapter>

        <chapter title="Event Handler Registration" id="general-invalid-event-handler-registration">
            <p>
                This exception is thrown when an attempt to register an <a href="Events.topic">event handler</a> fails.
                This may happen when:
            </p>

            <list>
                <li>The event handler was already registered previously.</li>
            </list>

            <p>
                The type for this exception is <code>EventHandlerRegistrationException</code>.
            </p>

            <p>
                This exception supports the following extra properties:
            </p>

            <table style="header-row">
                <tr>
                    <td>Name</td>
                    <td>Type</td>
                    <td>Description</td>
                </tr>

                <tr>
                    <td><code>reason</code></td>
                    <td><code>String</code></td>

                    <td>
                        The human-readable string explaining why the event handler couldn't be registered.
                    </td>
                </tr>
            </table>
        </chapter>

        <chapter title="Invalid Argument" id="general-invalid-argument">
            <p>
                This exception is thrown when a converter builder hasn't been set up properly, thus resulting in
                an invalid command argument.
                This usually happens when a required property is missing from the converter builder, or a property
                has otherwise been configured incorrectly.
            </p>

            <p>
                The type for this exception is <code>InvalidArgumentException</code>.
            </p>

            <p>
                This exception supports the following extra properties:
            </p>

            <table style="header-row">
                <tr>
                    <td>Name</td>
                    <td>Type</td>
                    <td>Description</td>
                </tr>

                <tr>
                    <td><code>builder</code></td>
                    <td><code>ConverterBuilder&lt;*&gt;</code></td>

                    <td>
                        The converter builder that failed to validate.
                        For more information, see <a href="Converters.topic">the dedicated documentation</a>.
                    </td>
                </tr>

                <tr>
                    <td><code>reason</code></td>
                    <td><code>String</code></td>

                    <td>
                        The human-readable string explaining why this argument failed to validate.
                    </td>
                </tr>
            </table>
        </chapter>

        <chapter title="Invalid Command" id="general-invalid-command">
            <p>
                This exception is thrown when a command fails to validate, thus resulting in an invalid command.
                This happens when a command's registration requirements aren't met.
                For more information, see the relevant section in
                <a href="Commands.topic">the commands framework documentation</a>.
            </p>

            <p>
                The type for this exception is <code>InvalidCommandException</code>.
            </p>

            <p>
                This exception supports the following extra properties:
            </p>

            <table style="header-row">
                <tr>
                    <td>Name</td>
                    <td>Type</td>
                    <td>Description</td>
                </tr>

                <tr>
                    <td><code>name</code></td>
                    <td><code>String?</code></td>

                    <td>
                        The name of the command that failed to validate.
                        This will be <code>null</code> if the command failed to validate because it wasn't given a name.
                    </td>
                </tr>

                <tr>
                    <td><code>reason</code></td>
                    <td><code>String</code></td>

                    <td>
                        The human-readable string explaining why this command failed to validate.
                    </td>
                </tr>
            </table>
        </chapter>

        <chapter title="Invalid Event Handler" id="general-invalid-event-handler">
            <p>
                This exception is thrown when an event handler fails to validate, thus resulting in an invalid event
                handler.
                This may happen when:
            </p>

            <list>
                <li>The event handler does not have a defined action.</li>
            </list>

            <p>
                The type for this exception is <code>InvalidEventHandlerException</code>.
            </p>

            <p>
                This exception supports the following extra properties:
            </p>

            <table style="header-row">
                <tr>
                    <td>Name</td>
                    <td>Type</td>
                    <td>Description</td>
                </tr>

                <tr>
                    <td><code>reason</code></td>
                    <td><code>String</code></td>

                    <td>
                        The human-readable string explaining why this event handler failed to validate.
                    </td>
                </tr>
            </table>
        </chapter>

        <chapter title="Invalid Extension" id="general-invalid-extension">
            <p>
                This exception is thrown when an extension fails to validate, thus resulting in an invalid extension.
            </p>

            <warning>
                <p>
                    This is a legacy exception that was created, but never implemented. It's documented here in case it
                    does end up being used someday.
                </p>

                <p>
                    To detect an extension that failed to load, you should use the
                    <a href="Extra-Events.topic" anchor="extension-state">extension state event</a> instead.
                </p>
            </warning>

            <chapter title="Exception Info" id="general-invalid-extension-info" collapsible="true">
                <p>
                    The type for this exception is <code>InvalidExtensionException</code>.
                </p>

                <p>
                    This exception supports the following extra properties:
                </p>

                <table style="header-row">
                    <tr>
                        <td>Name</td>
                        <td>Type</td>
                        <td>Description</td>
                    </tr>

                    <tr>
                        <td><code>clazz</code></td>
                        <td><code>KClass&lt;out Extension&gt;</code></td>

                        <td>
                            The invalid extension's class.
                        </td>
                    </tr>

                    <tr>
                        <td><code>reason</code></td>
                        <td><code>String?</code></td>

                        <td>
                            The human-readable string explaining why this extension failed to validate.
                        </td>
                    </tr>
                </table>
            </chapter>
        </chapter>
    </chapter>

    <chapter title="Parser Exceptions" id="parser">
        <p>
            Kord Extensions contains a number of useful <a href="Parsers.topic" /> that are mostly used by
            <a href="Converters.topic" />.
            When a parser fails to parse a value, it will throw an extension that extends the
            <code>BaseParserException</code> type.
        </p>

        <p>
            This type provides no extra functions or properties, and it directly extends <code>KordExException</code>.
        </p>

        <chapter title="Duration Parser" id="parser-duration">
            <p>
                This is a generic exception that's extended by more concrete types.
                It's also thrown directly by duration parsers when:
            </p>

            <list>
                <li>
                    The parser is provided with a string containing a different number of units and values.
                    Duration parsers require an equal number of units and values, as bare numbers are not supported.
                </li>
            </list>

            <p>
                The type for this exception is <code>DurationParserException</code>.
            </p>

            <p>
                This exception supports the following extra properties:
            </p>

            <table style="header-row">
                <tr>
                    <td>Name</td>
                    <td>Type</td>
                    <td>Description</td>
                </tr>

                <tr>
                    <td><code>error</code></td>
                    <td><code>String</code></td>

                    <td>
                        The human-readable string explaining what went wrong.
                    </td>
                </tr>
            </table>
        </chapter>

        <chapter title="Invalid Time Unit" id="parser-invalid-time-unit">
            <p>
                This exception is thrown when a duration parser encounters an invalid or unsupported time unit when
                parsing.
            </p>

            <p>
                The type for this exception is <code>InvalidTimeUnitException</code>.
                Additionally, this exception extends <code>DurationParserException</code>, rather than the base
                <code>KordExException</code> type.
            </p>

            <p>
                This exception supports the following extra properties:
            </p>

            <table style="header-row">
                <tr>
                    <td>Name</td>
                    <td>Type</td>
                    <td>Description</td>
                </tr>

                <tr>
                    <td><code>unit</code></td>
                    <td><code>String</code></td>

                    <td>
                        The invalid or unsupported time unit encountered.
                    </td>
                </tr>
            </table>
        </chapter>
    </chapter>
</topic>