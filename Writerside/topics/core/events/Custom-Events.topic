<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="Custom Events" id="Custom-Events">

    <show-structure depth="2"/>

    <p>
        If you'd like to create your own events, you have two options:
    </p>

    <list>
        <li>
            Extend Kord's
            <a href="https://dokka.kord.dev/core/dev.kord.core.event/-event/index.html"><code>Event</code></a> type.
            This is provided as an option mostly so that you can integrate other Kord-based libraries with Kord
            Extensions.
        </li>

        <li>
            Extend the <code>KordExEvent</code> type, which itself extends Kord's <code>Event</code> type.
            This also extends the <code>KordExKoinComponent</code> type, providing <a href="Koin.topic" /> access.
        </li>
    </list>

    <note>
        Events based on the <code>KordExEvent</code> type are not gateway-relevant and always have a <code>shard</code>
        property with a value of <code>-1</code>.
        If your event is gateway-relevant, then you may be better off extending Kord's
        <a href="https://dokka.kord.dev/core/dev.kord.core.event/-event/index.html"><code>Event</code></a> type
        instead, depending on the situation.
    </note>

    <p>
        The <code>KordExEvent</code> type has an identical API to the Kord
        <a href="https://dokka.kord.dev/core/dev.kord.core.event/-event/index.html"><code>Event</code></a> type.
    </p>

    <code-block lang="kotlin" collapsible="true" collapsed-title="Example">
        public data class MyEvent(
            public val data: String
        ) : KordExEvent
    </code-block>

    <p>
        Once you've constructed an event object, you can fire it using the <code>send</code> function that's part of
        the <a href="The-Bot.topic" anchor="functions"><code>ExtensibleBot</code></a> type.
        If you need to get a reference to this, you can do so via <a href="Koin.topic" />.
    </p>

    <code-block lang="kotlin" collapsible="true" collapsed-title="Example">
        class MyClass : KordExKoinComponent {
            val bot: ExtensibleBot by inject()

            fun myFunction() {
                val event = MyEvent("data")

                bot.send(event)
            }
        }
    </code-block>

    <chapter title="Rich Base Types" id="rich-base-types">
        <p>
            When an event deals with specific entity types, it's important that it implements the relevant rich base
            types.
        </p>

        <warning>
            Failure to implement the correct types will make your events incompatible with <a href="Checks.topic" />.
            It's <format style="bold">extremely important</format> to implement the correct types!
        </warning>

        <table style="header-row">
            <tr>
                <td>Name</td>
                <td>Parent Types</td>
                <td>Description</td>
            </tr>

            <tr>
                <td><code>GuildEvent</code></td>
                <td> </td>

                <td>
                    Base type for events that contain guild information.
                    This must be provided in the form of a
                    <a href="https://dokka.kord.dev/core/dev.kord.core.behavior/-guild-behavior/index.html">
                        <code>GuildBehavior</code>
                    </a>
                    object.
                </td>
            </tr>

            <tr>
                <td><code>MemberEvent</code></td>
                <td><code>GuildEvent</code>, <code>UserEvent</code></td>

                <td>
                    Base type for events that contain guild member information.
                    This must be provided in the form of a
                    <a href="https://dokka.kord.dev/core/dev.kord.core.behavior/-member-behavior/index.html">
                        <code>MemberBehavior</code>
                    </a>
                    object.
                </td>
            </tr>

            <tr>
                <td><code>MessageEvent</code></td>
                <td> </td>

                <td>
                    Base type for events that contain message information.
                    This must be provided in the form of a
                    <a href="https://dokka.kord.dev/core/dev.kord.core.behavior/-message-behavior/index.html">
                        <code>MessageBehavior</code>
                    </a>
                    object.
                </td>
            </tr>

            <tr>
                <td><code>RoleEvent</code></td>
                <td> </td>

                <td>
                    Base type for events that contain role information.
                    This must be provided in the form of a
                    <a href="https://dokka.kord.dev/core/dev.kord.core.behavior/-role-behavior/index.html">
                        <code>RoleBehavior</code>
                    </a>
                    object.
                </td>
            </tr>

            <tr>
                <td><code>UserEvent</code></td>
                <td> </td>

                <td>
                    Base type for events that contain user information.
                    This must be provided in the form of a
                    <a href="https://dokka.kord.dev/core/dev.kord.core.behavior/-user-behavior/index.html">
                        <code>UserEvent</code>
                    </a>
                    object.
                </td>
            </tr>
        </table>
    </chapter>
</topic>