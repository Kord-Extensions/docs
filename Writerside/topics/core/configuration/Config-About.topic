<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="About" id="Config-About">

    <primary-label ref="v2" />

    <include from="Snippets.topic" element-id="config-note"/>

    <p>
        The <code>about</code> builder allows you to configure your bot's <code>about</code> command.
    </p>

    <warning>
        <p>
            The <code>about</code> command includes a mandatory copyright section, mentioning Kord Extensions and
            the libraries it uses.
        </p>

        <p>
            Because of how Kord Extensions is licensed, this ensures that your bot contains the required notice and way
            to get the Kord Extensions source code, and you must not work around this, even though it's likely
            possible.
        </p>

        <p>
            If this is a big problem for you or your company, please get in touch via
            <a href="%kordex-discord%">the Discord server</a>, and we'll try to figure out an alternative license for
            you.
        </p>
    </warning>

    <p>
        By default, Kord Extensions will create an <code>about</code> chat and slash command, with a
        <code>copyright</code> subcommand.
        You can configure this command using the <code>about { }</code> builder, adding your own sections and copyright
        notices as appropriate.
    </p>

    <code-block lang="kotlin" collapsible="true" collapsed-title="Example Usage">
        about {
            ephemeral = false

            general {
                message { locale ->
                    content = "General message content goes here!"
                }
            }

            section("another") {
                description = "Command description goes here!"

                message { locale ->
                    content = "More content here!"

                    embed {
                        description = "Maybe even an embed?"
                    }
                }
            }
        }
    </code-block>

    <chapter title="Configuration" id="configuration">
        <p>
            The <code>about { }</code> builder provides the following properties.
        </p>

        <table style="header-row">
            <tr>
                <td>Property</td>
                <td>Type</td>
                <td>Description</td>
            </tr>

            <tr>
                <td><code>ephemeral</code></td>
                <td><code>Boolean</code></td>

                <td>
                    Whether commands (including the copyright command) should respond to slash commands ephemerally.
                    Defaults to <code>true</code>.
                </td>
            </tr>

            <tr>
                <td><code>translationBundle</code></td>
                <td><code>String?</code></td>

                <td>
                    Translation bundle, used to translate your section names and descriptions by default.
                </td>
            </tr>
        </table>
    </chapter>

    <chapter title="Sections" id="sections">
        <p>
            While Kord Extensions provides the <code>copyright</code> subcommand by default, you're free to add any
            other informational commands you wish.
            These commands are referred to as "sections," and each section is represented by a subcommand on the
            <code>about</code> command.
        </p>

        <p>
            To configure a section, use the <code>section</code> function.
            This function takes the section name and description as arguments, and provides a builder you can use to
            configure the section's options and provide a message.
        </p>

        <code-block lang="kotlin" collapsible="true" collapsed-title="Example Usage">
            section("name", "description") {
                bundle = "my-translation-bundle"
                description = "section description"

                message {
                    embed {
                        title = "Embed Title"
                        description = translate("a.translation.key")
                    }
                }
            }
        </code-block>

        <p>
            The <code>about { }</code> builder also provides a <code>general</code> builder, providing a standard
            "general" section with a translated command name and description.
        </p>

        <chapter title="Builders" id="section-builders">
            <table style="header-row">
                <tr>
                    <td>Builder</td>
                    <td>Description</td>
                </tr>

                <tr>
                    <td><code>message</code></td>

                    <td>
                        <p>
                            Call this DSL function to provide a message builder,
                            used to construct the message returned to the user
                            when they access the current section.
                        </p>

                        <p>
                            This builder is a receiver against the <code>MessageBuilder</code> type, and takes the
                            current event context's <code>Locale</code> as the first argument.
                            This <code>Locale</code> object can be used with the provided <code>translate</code>
                            function,
                            if you need to use
                            <a href="Internationalisation.topic">the i18n system</a>.
                        </p>
                    </td>
                </tr>
            </table>
        </chapter>

        <chapter title="Properties" id="section-properties">
            <table style="header-row">
                <tr>
                    <td>Property</td>
                    <td>Type</td>
                    <td>Description</td>
                </tr>

                <tr>
                    <td><code>ephemeral</code></td>
                    <td><code>Boolean</code></td>

                    <td>
                        Whether this section should respond to slash commands ephemerally.
                        If not provided, defaults to the setting provided in the <code>about { }</code> builder.
                    </td>
                </tr>

                <tr>
                    <td><code>translationBundle</code></td>
                    <td><code>String?</code></td>

                    <td>
                        Translation bundle, used to translate the section name and description.
                        If not provided, defaults to the setting provided in the <code>about { }</code> builder.
                    </td>
                </tr>
            </table>
        </chapter>

        <chapter title="Functions" id="section-functions">
            <table style="header-row">
                <tr>
                    <td>Function</td>
                    <td>Description</td>
                </tr>

                <tr>
                    <td><code>translate</code></td>

                    <td>
                        Convenience function providing quick access to
                        <a href="Internationalisation.topic">the i18n system</a>,
                        allowing translation using the given translation key and locale.
                    </td>
                </tr>
            </table>
        </chapter>
    </chapter>

    <chapter title="Copyright" id="copyright">
        <p>
            The contents of the <code>copyright</code> section are generated based on a list of copyright entries,
            provided via the <code>copyright</code> function.
        </p>

        <p>
            Kord Extensions will automatically populate this list with the following data:
        </p>

        <list type="bullet">
            <li>The dependencies it uses, along with those used by any first-party modules included with your bot.</li>
            <li>A list of currently loaded plugins, without versioning information.</li>
        </list>

        <p>
            Copyright items may be added by calling the <code>copyright</code> function with a name,
            <a href="https://spdx.org/licenses/">SPDX license identifier</a>,
            item type (Framework, Library, Plugin/Module, or Tool), and optionally a URL.
        </p>

        <code-block lang="kotlin" collapsible="true" collapsed-title="Example">
            about {
                copyright(
                    "Time4J",
                    "LGPL-2.1",
                    CopyrightType.Library,
                    "http://time4j.net/"
                )
            }
        </code-block>

        <chapter title="Modules" id="copyright-modules">
            <p>
                If you're writing a module, library, or meta-framework, feel free to include whatever information you
                feel is relevant by default.
            </p>

            <p>
                A simple way to do this is by creating an extension function, checking a top-level boolean value, and
                calling this function in a setup function or class initializer.
                For example:
            </p>

            <code-block lang="kotlin" collapsible="true" collapsed-title="Example">
                private var copyrightAdded = false

                internal fun AboutBuilder.addCopyright() {
                    if (!copyrightAdded) {
                        copyright(
                            "Time4J",
                            "LGPL-2.1",
                            CopyrightType.Library,
                            "http://time4j.net/"
                        )
                    }

                    copyrightAdded = true
                }

                // ...

                class MyExtension : Extension() {
                    override fun setup() {
                        bot.settings.aboutBuilder.addCopyright()
                    }
                }
            </code-block>
        </chapter>
    </chapter>
</topic>
