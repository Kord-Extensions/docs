name: "Build & Deploy"

on:
  push:
    branches:
      - "root"

  workflow_dispatch:

env:
  ALGOLIA_ARTIFACT: "algolia-indexes-KORDEX.zip"
  ARTIFACT: "webHelpKORDEX2-all.zip"
  INSTANCE: "Writerside/kordex"

permissions:
  contents: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: JetBrains/writerside-github-action@v4

        with:
          instance: ${{ env.INSTANCE }}
          artifact: ${{ env.ARTIFACT }}

      - uses: actions/upload-artifact@v3

        with:
          name: docs

          path: |
            artifacts/${{ env.ARTIFACT }}
            artifacts/report.json

          retention-days: 7

      - uses: actions/upload-artifact@v3

        with:
          name: algolia-indexes
          path: artifacts/${{ env.ALGOLIA_ARTIFACT }}

          retention-days: 7
  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Mark safe directory
        run: "git config --global --add safe.directory /github/workspace"

      - uses: actions/download-artifact@v1

        with:
          name: docs
          path: artifacts

      - uses: JetBrains/writerside-checker-action@v1

        with:
          instance: ${{ env.INSTANCE }}
  deploy:
    # Requires the build job results
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Mark safe directory
        run: "git config --global --add safe.directory /github/workspace"

      - name: Switch branch

        run: |
          git checkout -b deployment
          rm -rf !(.git)

      - uses: actions/download-artifact@v3

        with:
          name: algolia-indexes

      - uses: wangchucheng/algolia-uploader@master

        with:
          app_id: "00TQKB9RBW"
          admin_key: ${{ secrets.ALGOLIA_ADMIN_KEY }}
          index_name: "KordEx Docs"
          index_file_path: ${{ env.ALGOLIA_ARTIFACT }}

      - uses: actions/download-artifact@v3

        with:
          name: docs

      - uses: montudor/action-zip@v1

        with:
          args: unzip -qq ${{ env.ARTIFACT }} -d docs

      - name: Copy files, commit and push

        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "username@users.noreply.github.com"
          
          cp -r docs/* .
          rm -rf docs
          
          git add .
          git commit -am "Automatic deployment"
          git push --force origin deployment
